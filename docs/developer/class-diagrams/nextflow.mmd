classDiagram
    %%
    %% nextflow
    %%
    class Channel {
        empty() DataflowWriteChannel
        fromFilePairs(Map, Object) DataflowWriteChannel
        fromFilePairs(Map, Object, Closure) DataflowWriteChannel
        fromList(Collection) DataflowWriteChannel
        fromPath(Map, Object) DataflowWriteChannel~Path~
        fromSRA(String) DataflowWriteChannel
        fromSRA(Map, String) DataflowWriteChannel
        interval(String) DataflowWriteChannel
        interval(String, Closure) DataflowWriteChannel
        of(Object...) DataflowWriteChannel
        value(Object) DataflowVariable
        watchPath(Path, String) DataflowWriteChannel
        watchPath(Pattern, String) DataflowWriteChannel
        watchPath(String, String) DataflowWriteChannel
    }

    class Nextflow {
        branchCriteria(Closure~TokenBranchDef~) Closure~TokenBranchDef~
        cacheableDir(Object) Path
        cacheableFile(Object, String) Path
        error(String)
        exit(int, String)
        exit(String)
        fasta(Object) FastaSplitter
        fastq(Object) FastqSplitter
        file(Map, Object)
        files(Map, Object)
        groupKey(Object, int) GroupKey
        multiMapCriteria(Closure~TokenBranchDef~) Closure~TokenMultiMapDef~
        sendMail(Map)
        sendMail(Closure)
        stop()
        tuple(Object) ArrayTuple
        tuple(Object...) ArrayTuple
    }

    class Session {
        baseDir : Path
        binding : ScriptBinding
        cache : CacheDB
        commandLine : String
        commitId : String
        config : Map
        configFiles : List~Path~
        dag : DAG
        profile : String
        runName : String
        script : BaseScript
        uniqueId : UUID
        workDir : Path
    }
